immediates:
    - I : {data: {11..0 : 31..20}                                     , signed: True}
    - S : {data: {11..5 : 31..25, 4..0 : 11..7}                       , signed: True}
    - B: {data: {12 : 31, 11 : 7, 10..5 : 30..25, 4..1 : 11..8}       , signed: True}
    - U : {data: {31..12 : 31..12}                                    , signed: False}
    - J: {data: {20 : 31, 19..12 : 19..12, 11 : 20, 10..1 : 30..21}   , signed: True}

formats:
    - R: {
       fields: [rd, rs1, rs2]
      }
    - I: {
       fields: [rd,rs1],
       immediates: I
      }
    - S: {
       fields: [rs1,rs2],
       immediates: S
      }
    - B: {
       fields: [rs1,rs2],
       immediates: B
      }
    - U: {
       fields: [rd],
       immediates: U
      }
    - J: {
       fields: [rd],
       immediates: J
      }

opcodes:
  - opcode : 6..0
  - func3  : 14..12
  - func7  : 31..25
  - rd     : 11..7
  - rs1    : 19..15
  - func12 : 31..20

instructions:
  # RV32I
  - LUI       :    {format: U,  opcodes: {opcode: 7'b0110111 } , ext: [RV32I,RV64I]}
  - AUIPC     :    {format: U,  opcodes: {opcode: 7'b0010111 } , control : {use_pc : 1'b1} , ext: [RV32I,RV64I]}
  - JAL       :    {format: J,  opcodes: {opcode: 7'b1101111 } , ext: [RV32I,RV64I]}
  - JALR      :    {format: I,  opcodes: {opcode: 7'b1100111 , func3: 3'b000 } , ext: [RV32I,RV64I]}
  - BEQ       :    {format: B,  opcodes: {opcode: 7'b1100011 , func3: 3'b000 } , ext: [RV32I,RV64I]}
  - BNE       :    {format: B,  opcodes: {opcode: 7'b1100011 , func3: 3'b001 } , ext: [RV32I,RV64I]}
  - BLT       :    {format: B,  opcodes: {opcode: 7'b1100011 , func3: 3'b100 } , ext: [RV32I,RV64I]}
  - BGE       :    {format: B,  opcodes: {opcode: 7'b1100011 , func3: 3'b101 } , ext: [RV32I,RV64I]}
  - BLTU      :    {format: B,  opcodes: {opcode: 7'b1100011 , func3: 3'b110 } , ext: [RV32I,RV64I]}
  - BGEU      :    {format: B,  opcodes: {opcode: 7'b1100011 , func3: 3'b111 } , ext: [RV32I,RV64I]}
  - LB        :    {format: I,  opcodes: {opcode: 7'b0000011 , func3: 3'b000 } , ext: [RV32I,RV64I]}
  - LH        :    {format: I,  opcodes: {opcode: 7'b0000011 , func3: 3'b001 } , ext: [RV32I,RV64I]}
  - LW        :    {format: I,  opcodes: {opcode: 7'b0000011 , func3: 3'b010 } , ext: [RV32I,RV64I]}
  - LBU       :    {format: I,  opcodes: {opcode: 7'b0000011 , func3: 3'b100 } , ext: [RV32I,RV64I]}
  - LHU       :    {format: I,  opcodes: {opcode: 7'b0000011 , func3: 3'b101 } , ext: [RV32I,RV64I]}
  - SB        :    {format: S,  opcodes: {opcode: 7'b0100011 , func3: 3'b000 } , ext: [RV32I,RV64I]}
  - SH        :    {format: S,  opcodes: {opcode: 7'b0100011 , func3: 3'b001 } , ext: [RV32I,RV64I]}
  - SW        :    {format: S,  opcodes: {opcode: 7'b0100011 , func3: 3'b010 } , ext: [RV32I,RV64I]}
  - ADDI      :    {format: I,  opcodes: {opcode: 7'b0010011 , func3: 3'b000 } , ext: [RV32I,RV64I]}
  - SLTI      :    {format: I,  opcodes: {opcode: 7'b0010011 , func3: 3'b010 } , ext: [RV32I,RV64I]}
  - SLTIU     :    {format: I,  opcodes: {opcode: 7'b0010011 , func3: 3'b011 } , ext: [RV32I,RV64I]}
  - XORI      :    {format: I,  opcodes: {opcode: 7'b0010011 , func3: 3'b100 } , ext: [RV32I,RV64I]}
  - ORI       :    {format: I,  opcodes: {opcode: 7'b0010011 , func3: 3'b110 } , ext: [RV32I,RV64I]}
  - ANDI      :    {format: I,  opcodes: {opcode: 7'b0010011 , func3: 3'b111 } , ext: [RV32I,RV64I]}
  - SLLI      :    {format: R,  opcodes: {opcode: 7'b0010011 , func3: 3'b001 , func7: 7'b0000000 } , control : {imm_type : decoder_pkg::I , use_rs2 : 1'b0} , ext: [RV32I]}
  - SRLI      :    {format: R,  opcodes: {opcode: 7'b0010011 , func3: 3'b101 , func7: 7'b0000000 } , control : {imm_type : decoder_pkg::I , use_rs2 : 1'b0} , ext: [RV32I]}
  - SRAI      :    {format: R,  opcodes: {opcode: 7'b0010011 , func3: 3'b101 , func7: 7'b0100000 } , control : {imm_type : decoder_pkg::I , use_rs2 : 1'b0} , ext: [RV32I]}
  - ADD       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b000 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}
  - SUB       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b000 , func7: 7'b0100000 } , ext: [RV32I,RV64I]}
  - SLL       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b001 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}
  - SLT       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b010 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}
  - SLTU      :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b011 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}  
  - XOR       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b100 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}
  - SRL       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b101 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}
  - SRA       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b101 , func7: 7'b0100000 } , ext: [RV32I,RV64I]}
  - OR        :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b110 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}
  - AND       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b111 , func7: 7'b0000000 } , ext: [RV32I,RV64I]}
  # RV64I
  - LWU       :    {format: I,  opcodes: {opcode: 7'b0000011 , func3: 3'b110 } , ext: [RV64I]}
  - LD        :    {format: I,  opcodes: {opcode: 7'b0000011 , func3: 3'b011 } , ext: [RV64I]}
  - SD        :    {format: S,  opcodes: {opcode: 7'b0100011 , func3: 3'b011 } , ext: [RV64I]}
  - SLLI      :    {format: R,  opcodes: {opcode: 7'b0010011 , func3: 3'b001 , func7: "7'b000000?"} , control : {imm_type : decoder_pkg::I , use_rs2 : 1'b0} , ext: [RV64I]}
  - SRLI      :    {format: R,  opcodes: {opcode: 7'b0010011 , func3: 3'b101 , func7: "7'b000000?"} , control : {imm_type : decoder_pkg::I , use_rs2 : 1'b0} , ext: [RV64I]}
  - SRAI      :    {format: R,  opcodes: {opcode: 7'b0010011 , func3: 3'b101 , func7: "7'b010000?"} , control : {imm_type : decoder_pkg::I , use_rs2 : 1'b0} , ext: [RV64I]}
  - ADDIW     :    {format: I,  opcodes: {opcode: 7'b0011011 , func3: 3'b000 } , ext: [RV64I]}
  - SLLIW     :    {format: I,  opcodes: {opcode: 7'b0011011 , func3: 3'b001 , func7: 7'b0000000} , ext: [RV64I]}
  - SRLIW     :    {format: I,  opcodes: {opcode: 7'b0011011 , func3: 3'b101 , func7: 7'b0000000} , ext: [RV64I]}
  - SRAIW     :    {format: I,  opcodes: {opcode: 7'b0011011 , func3: 3'b101 , func7: 7'b0100000} , ext: [RV64I]}
  - ADDW      :    {format: R,  opcodes: {opcode: 7'b0111011 , func3: 3'b000 , func7: 7'b0000000} , ext: [RV64I]}
  - SUBW      :    {format: R,  opcodes: {opcode: 7'b0111011 , func3: 3'b000 , func7: 7'b0100000} , ext: [RV64I]}
  - SLLW      :    {format: R,  opcodes: {opcode: 7'b0111011 , func3: 3'b001 , func7: 7'b0000000} , ext: [RV64I]}
  - SRLW      :    {format: R,  opcodes: {opcode: 7'b0111011 , func3: 3'b101 , func7: 7'b0000000} , ext: [RV64I]}
  - SRAW      :    {format: R,  opcodes: {opcode: 7'b0111011 , func3: 3'b101 , func7: 7'b0100000} , ext: [RV64I]}
  # Misc-Mem
  - FENCE     :    {format: I,  opcodes: {opcode: 7'b0001111 , func3: 3'b000 } , control : {use_rs1 : 1'b0} , ext: [RV32I,RV64I]}
  - FENCEI    :    {format: I,  opcodes: {opcode: 7'b0001111 , func3: 3'b001 } , control : {use_rs1 : 1'b0} , ext: [Zifencei]}
  # System
  - ECALL     :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b000 , rd: 5'b00000 , rs1: 5'b00000 , func12: 12'b000000000000 } , control : {ecall : 1'b1 , use_rs1 : 1'b0} , ext: [RV32I,RV64I]}
  - EBREAK    :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b000 , rd: 5'b00000 , rs1: 5'b00000 , func12: 12'b000000000001 } , control : {ebreak: 1'b1 , use_rs1 : 1'b0} , ext: [RV32I,RV64I]}
  - MRET      :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b000 , rd: 5'b00000 , rs1: 5'b00000 , func12: 12'b001100000010 } , control : {mret  : 1'b1 , use_rs1 : 1'b0} , ext: [System] , mode: [M]}
  - SRET      :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b000 , rd: 5'b00000 , rs1: 5'b00000 , func12: 12'b000100000010 } , control : {sret  : 1'b1 , use_rs1 : 1'b0} , ext: [System] , mode: [S]}
  - DRET      :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b000 , rd: 5'b00000 , rs1: 5'b00000 , func12: 12'b011110110010 } , control : {dret  : 1'b1 , use_rs1 : 1'b0} , ext: [System] , mode: [D]}
  - WFI       :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b000 , rd: 5'b00000 , rs1: 5'b00000 , func12: 12'b000100000101 } , control : {wfi   : 1'b1 , use_rs1 : 1'b0} , ext: [System] , mode: [WFI]}
  - CSRRW     :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b001 } , ext: [ZiCsr]}
  - CSRRS     :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b010 } , ext: [ZiCsr]}
  - CSRRC     :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b011 } , ext: [ZiCsr]}
  - CSRRWI    :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b101 } , control : {use_uimm : 1'b1 , use_rs1 : 1'b0} ,ext: [ZiCsr]}
  - CSRRSI    :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b110 } , control : {use_uimm : 1'b1 , use_rs1 : 1'b0} ,ext: [ZiCsr]}
  - CSRRCI    :    {format: I,  opcodes: {opcode: 7'b1110011 , func3: 3'b111 } , control : {use_uimm : 1'b1 , use_rs1 : 1'b0} ,ext: [ZiCsr]}
  # RV32M
  - MUL       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b000 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  - MULH      :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b001 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  - MULHSU    :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b010 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  - MULHU     :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b011 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  - DIV       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b100 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  - DIVU      :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b101 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  - REM       :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b110 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  - REMU      :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b111 , func7: 7'b0000001 } , ext: [RV32M,RV64M]}
  # RV64M
  - MULW      :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b000 , func7: 7'b0111011 } , ext: [RV64M]}
  - DIVW      :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b100 , func7: 7'b0111011 } , ext: [RV64M]}
  - DIVUW     :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b101 , func7: 7'b0111011 } , ext: [RV64M]}
  - REMW      :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b110 , func7: 7'b0111011 } , ext: [RV64M]}
  - REMUW     :    {format: R,  opcodes: {opcode: 7'b0110011 , func3: 3'b111 , func7: 7'b0111011 } , ext: [RV64M]}